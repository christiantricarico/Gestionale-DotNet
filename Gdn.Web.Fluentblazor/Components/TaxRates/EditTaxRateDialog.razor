@implements IDialogContentComponent<DialogContent>

<FluentDialogHeader ShowDismiss="true">
    <FluentStack VerticalAlignment="VerticalAlignment.Center">
        <FluentIcon Value="@(new Icons.Regular.Size24.WindowApps())" />
        <FluentLabel Typo="Typography.PaneHeader">
            @Dialog.Instance.Parameters.Title
        </FluentLabel>
    </FluentStack>
</FluentDialogHeader>

<FluentDialogBody>
    <EditForm EditContext="EditContext" FormName="edit-taxrate-form">
        <DataAnnotationsValidator />
        <FluentValidationSummary />

        <FluentGrid Spacing="1">
            <FluentGridItem xs="12">
                <FluentTextField Name="@nameof(TaxRateInputModel.Code)" @bind-Value="Model.Code" Label="Codice" Autofocus="true" />
            </FluentGridItem>
            <FluentGridItem xs="12">
                <FluentTextField Name="@nameof(TaxRateInputModel.Name)" @bind-Value="Model.Name" Label="Nome" Style="width: 100%" />
            </FluentGridItem>
            <FluentGridItem xs="12">
                <FluentTextArea Name="@nameof(TaxRateInputModel.Description)" Rows="3" Cols="60" @bind-Value="Model.Description" Label="Descrizione" Style="width: 100%" />
            </FluentGridItem>
            <FluentGridItem xs="4">
                <FluentDecimalField Name="@nameof(TaxRateInputModel.Rate)" Label="Aliquota (%)" @bind-DecimalValue="Model.Rate" />
            </FluentGridItem>
            <FluentGridItem xs="8">
                <FluentCombobox Items=@_taxRateNatureOptions
                                TOption="Option<int>"
                                OptionText="@(i => i.Text)"
                                OptionValue="@(i => i.Value.ToString())"
                                Label="Natura Iva" Style="width: 100%" Height="200px"
                                Autocomplete="ComboboxAutocomplete.Both"
                                @bind-SelectedOption="@_selectedTaxRateNatureOption"
                                @bind-Value="@_taxRateNatureValue" />
            </FluentGridItem>
        </FluentGrid>
    </EditForm>
</FluentDialogBody>

<FluentDialogFooter>
    <FluentButton Appearance="Appearance.Accent"
                  OnClick="@SaveAsync">
        Salva
    </FluentButton>
</FluentDialogFooter>

@code {

    [Inject]
    private IHttpClientFactory HttpClientFactory { get; set; } = default!;

    [CascadingParameter]
    public FluentDialog Dialog { get; set; } = default!;

    [Parameter]
    public DialogContent Content { get; set; } = default!;

    private HttpClient HttpClient => HttpClientFactory.CreateApiClientVs();
    private TaxRateInputModel Model { get; set; } = default!;
    private EditContext EditContext { get; set; } = default!;

    IEnumerable<TaxRateNatureViewModel>? _taxRateNatures;
    List<Option<int>>? _taxRateNatureOptions;
    Option<int>? _selectedTaxRateNatureOption;
    string? _taxRateNatureValue;

    protected override async Task OnInitializedAsync()
    {
        Model = new TaxRateInputModel();
        EditContext = new EditContext(Model);

        string uri = "taxratenatures";
        _taxRateNatures = await HttpClient.GetFromJsonAsync<IEnumerable<TaxRateNatureViewModel>>(uri)
            ?? Enumerable.Empty<TaxRateNatureViewModel>();

        _taxRateNatureOptions = _taxRateNatures.Select(c => new Option<int>()
            {
                Text = c.Name,
                Value = c.Id
            }).ToList();
    }

    private async Task SaveAsync()
    {
        if (EditContext.Validate())
        {
            Model.TaxRateNatureId = _selectedTaxRateNatureOption?.Value;

            string uri = "taxrates";
            await HttpClient.PostAsJsonAsync<TaxRateInputModel>(uri, Model);

            await Dialog.CloseAsync(Model);
        }
    }
}
