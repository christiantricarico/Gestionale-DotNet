<FluentTextField Name="@Name" Label="@Label" Required="@Required"
                 @bind-Value="@StringValue" />

@code {

    [Parameter]
    public string? Name { get; set; }

    [Parameter]
    public string? Label { get; set; }

    [Parameter]
    public bool Required { get; set; }

    [Parameter]
    public decimal DecimalValue { get; set; }

    [Parameter]
    public EventCallback<decimal> DecimalValueChanged { get; set; }

    private string? StringValue
    {
        get
        {
            return DecimalValue.ToString("n2");
        }
        set
        {
            DecimalValue = UIUtils.ConvertTextToDecimal(value);
            DecimalValueChanged.InvokeAsync(DecimalValue);
        }
    }

    // private string _stringValue;

    // private async Task StringValueChanged(string value)
    // {
    //     //var decimalValue = UIUtils.ConvertTextToDecimal(value);
    //     if (decimal.TryParse(value, out var result))
    //     {
    //         DecimalValue = result;
    //     }
    //     else
    //     {
    //         DecimalValue = 0;
    //     }

    //     _stringValue = DecimalValue.ToString("n2");
    //     await InvokeAsync(StateHasChanged);
    //     //return DecimalValueChanged.InvokeAsync(DecimalValue);
    //     //StateHasChanged();
    // }
}
