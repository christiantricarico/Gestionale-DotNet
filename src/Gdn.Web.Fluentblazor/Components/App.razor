<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />
    <link rel="stylesheet" href="app.css" />
    <link rel="stylesheet" href="Gdn.Web.Fluentblazor.styles.css" />
    <link rel="icon" type="image/x-icon" href="favicon.ico" />
    <HeadOutlet />
</head>

<body>
    <Routes @rendermode="new InteractiveServerRenderMode(prerender: false)" />
    <script src="_framework/blazor.web.js"></script>

    <script>
        window.downloadFileFromStream = async (fileName, contentStreamReference) => {
          const arrayBuffer = await contentStreamReference.arrayBuffer();
          const blob = new Blob([arrayBuffer]);
          const url = URL.createObjectURL(blob);
          const anchorElement = document.createElement('a');
          anchorElement.href = url;
          anchorElement.download = fileName ?? '';
          anchorElement.click();
          anchorElement.remove();
          URL.revokeObjectURL(url);
        }

        function openPdfFromStream(streamRef) {
            streamRef.arrayBuffer().then(function (buffer) {
                var blob = new Blob([buffer], { type: "application/pdf" });
                var url = URL.createObjectURL(blob);
                window.open(url, '_blank');

                // The browser's built-in PDF viewer will handle the download button,
                // and the file will be downloaded as a PDF with the correct extension.

                // Revoking the URL will not allow to download the file with the correct extension.
                //setTimeout(() => URL.revokeObjectURL(url), 10000);
            });
        }
    </script>

</body>

</html>
